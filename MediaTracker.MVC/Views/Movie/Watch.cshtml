@model Application.Movies.Commands.WatchMovieModel

@{
    ViewBag.Title = "Watch";
}

<h2>Watch</h2>
<hr />

@using (Html.BeginForm("Watch", "Movie", new { movieId = Model.MovieId }, FormMethod.Post, new { id = "WatchForm", @class = "ui form" }))
{
    @Html.AntiForgeryToken()

    <div class="field">
        @Html.LabelFor(model => model.Number)
        @Html.EditorFor(model => model.Number)
        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
    </div>

    <div class="field">
        @Html.LabelFor(model => model.Date)
        @Html.TextBoxFor(model => model.Date)
        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
    </div>

    <div class="inline field">
        @Html.LabelFor(model => model.Rating)
        <div class="ui yellow segment">
            <div class="ui yellow ribbon label">
            </div>
            <div id="rateYo"></div>
        </div>
    </div>
    <div class="field">
        @Html.LabelFor(model => model.Comment)
        @Html.EditorFor(model => model.Comment)
        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
    </div>
    @*@Html.ValidationSummary("Errors", new { @class = "ui error message" })*@

    <div id="Submit" class="ui green submit button">Watch!</div>
    @Html.ActionLink("Back", "Details", new { id = Model.MovieId }, new { @class = "ui button" })

    @section Scripts {
        <script type="text/javascript">
            $(function () {
                $("#rateYo")
                    .on("rateyo.init", function (e, data) {
                        $(this).prev().text(data.rating);
                    })
                    .on("rateyo.change", function (e, data) {
                        $(this).prev().text(data.rating);
                    })
                    .rateYo({
                        starWidth: "25px",
                        numStars: 10,
                        maxValue: 10,
                        normalFill: '#fff9c4',
                        ratedFill: '#ffd54f',
                    });
            });

            $('#WatchForm')
                .form({
                    on: 'blur',
                    inline: true,
                    fields: {
                        Number: 'integer[1..9999]',
                    },
                    onSuccess: function (e) {
                        e.preventDefault();

                        var token = $('input[name=__RequestVerificationToken]').val();

                        $.ajax({
                            url: "/Movie/Watch",
                            method: "POST",
                            dataType: "json",
                            data: {
                                __RequestVerificationToken: token,
                                MovieId: @Model.MovieId,
                                Number: $('#Number').val(),
                                Date: $('#Date').val(),
                                Rating: $("#rateYo").rateYo("rating"),
                                Comment: $('#Comment').val(),
                            },
                            success: function (result) {
                                if (result.redirectToUrl != null) {
                                    window.location = result.redirectToUrl;
                                }
                            },
                            error: function () {
                                alert("Ajax call failed");
                            }
                        })
                    }

                })
                ;
        </script>
    }
}
